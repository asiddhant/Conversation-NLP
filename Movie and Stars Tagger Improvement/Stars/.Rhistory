install.packages("rjson")
load("C:/Users/asiddhan/Desktop/model_RF.RData")
dataset=cbind(dataset,word2vec)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=8)
output=predict(model_RF,newdata = testdata)
b=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=16)
output=predict(model_RF,newdata = testdata)
c=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=32)
output=predict(model_RF,newdata = testdata)
d=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=64)
output=predict(model_RF,newdata = testdata)
e=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=4)
output=predict(model_RF,newdata = testdata)
f=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=8)
output=predict(model_RF,newdata = testdata)
g=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=16)
output=predict(model_RF,newdata = testdata)
h=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=32)
output=predict(model_RF,newdata = testdata)
i=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=64)
output=predict(model_RF,newdata = testdata)
j=table(testdata$tag,output)
a
b
c
d
e
f
g
h
i
j
model_RF$importance
yb=model_RF$importance
names(yb)
row.names(yb)
yb=data.frame(vars=row.names(yb),vals=yb)
yb''
yb
yb=yb[order(-yb$MeanDecreaseGini)]
yb=yb[order(-yb$MeanDecreaseGini),]
yb
yb$vars[yb$MeanDecreaseGini>1]
impvars=as.character(yb$vars[yb$MeanDecreaseGini>1])
impvars
dataset[,impvars]
impvars=c(impvars,"tag")
impvars
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=6)
output=predict(model_RF,newdata = testdata)
b=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=8)
output=predict(model_RF,newdata = testdata)
c=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=12)
output=predict(model_RF,newdata = testdata)
d=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=16)
output=predict(model_RF,newdata = testdata)
e=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=4)
output=predict(model_RF,newdata = testdata)
f=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=6)
output=predict(model_RF,newdata = testdata)
g=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=8)
output=predict(model_RF,newdata = testdata)
h=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=12)
output=predict(model_RF,newdata = testdata)
i=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=16)
output=predict(model_RF,newdata = testdata)
j=table(testdata$tag,output)
a
b
c
d
e
ef
f
g
h
i
j
rm(list=ls())
load("C:/Users/asiddhan/Desktop/model_RF.RData")
odel_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=6)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=6)
output=predict(model_RF,newdata = testdata)
b=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=8)
output=predict(model_RF,newdata = testdata)
c=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=2)
output=predict(model_RF,newdata = testdata)
d=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=4)
output=predict(model_RF,newdata = testdata)
f=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=6)
output=predict(model_RF,newdata = testdata)
g=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=8)
output=predict(model_RF,newdata = testdata)
h=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=2)
output=predict(model_RF,newdata = testdata)
i=table(testdata$tag,output)
a
b
c
d
e
f
g
h
i
j
save.image("C:/Users/asiddhan/Desktop/multi_model_RF.RData")
setwd("C:/Users/asiddhan/Desktop/Starnames")
poswords=read.csv("poswords.csv",header = FALSE,stringsAsFactors = FALSE)
negwords=read.csv("negwords.csv",header = FALSE,stringsAsFactors = FALSE)
words=c(poswords$V1,negwords$V1)
dataset=read.csv("datasetn.csv",stringsAsFactors = FALSE)
word2vec=dataset[,c(8:307)]
dataset=dataset[,-c(8:307)]
dataset$flflag=0
first=which(dataset$w_id==0)
last=first-1
last=c(last[-1],nrow(dataset))
dataset$flflag[c(first,last)]=1
## Windowed postags
postaga1=c("NA",dataset$postag[-length(dataset$postag)])
dataset$postaga1=postaga1
dataset$postaga1[dataset$w_id==0]="NA"
postagb1=c(dataset$postag[-1],"NA")
dataset$postagb1=postagb1
dataset$postagb1[dataset$w_id!=0 & dataset$flflag==1]="NA"
postaga2=rep(NA,nrow(dataset))
postagb2=rep(NA,nrow(dataset))
for(i in 1:nrow(dataset)){
if(i<=2){
postaga2[i]="NA"
}
if(i>2){
postaga2[i]=ifelse(dataset$s_id[i]==dataset$s_id[i-2],dataset$postag[i-2],"NA")
}
}
for(i in 1:nrow(dataset)){
if(i>(nrow(dataset)-2)){
postagb2[i]="NA"
}
if(i<=(nrow(dataset)-2)){
postagb2[i]=ifelse(dataset$s_id[i]==dataset$s_id[i+2],dataset$postag[i+2],"NA")
}
}
dataset$postaga2=postaga2
dataset$postagb2=postagb2
dataset=subset(dataset,select=c(s_id,w_id,word,postagb2,postagb1,postag,postaga1,postaga2,flflag,count,tag,stannertag))
setDict("C:/Program Files (x86)/WordNet/2.1/dict")
Sys.setenv(WNHOME = "C:/Program Files (x86)/WordNet/2.1")
library(wordnet)
library(SnowballC)
## More Features - Intention Word
intwords=rep(NA,nrow(dataset))
for (i in 1:nrow(word2vec)){
numbag=min(dataset$w_id[i],4)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i-j])))
if(any(bag %in% words))
intwords[i]=1
}
intwords[is.na(intwords)]=0
## More Features - Sentiment Word
sentwords=rep(NA,nrow(dataset))
temp=which(dataset$w_id==0)
temp=c(temp[-1],nrow(dataset)+1)
temp=temp-1
wordnum=dataset$w_id[temp]+1
for (i in 1:nrow(dataset)){
sid=dataset$s_id[i]
numbag=min(4,wordnum[sid]-dataset$w_id[i]-1)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i+j])))
if(any(bag %in% words))
sentwords[i]=1
print (i)
}
sentwords[is.na(sentwords)]=0
finwords=as.integer(intwords|sentwords)
dataset$finwords=finwords
notapp=which(word2vec$X0==-999)
for (i in notapp){
tag=dataset$postag[i]
subd=which(dataset$postag==tag)
word2vec[i,]=apply(word2vec[subd,],2,mean)
}
library(gdata)
keep(dataset,word2vec,sure=TRUE)
word2vec[1:5,1:5]
str(dataset)
install.packages("qdapDictionaries")
is.word("sex")
library(qdapDictionaries)
library(qdapDictionaries)
is.word("sex")
library(qdapDictionaries)
is.word  <- function(x) x %in% GradyAugmented
is.word("sex")
table(dataset$postag)
(dataset$postag %in% c("NN","NNP","NNS","NNPS") & !is.word(dataset$word))
dataset$naivetag=ifelse((dataset$postag %in% c("NN","NNP","NNS","NNPS") & !is.word(dataset$word)),"P","O")
dataset$tag
dataset$tag[dataset$tag=="PERSON"]
dataset$tag[dataset$tag=="PERSON"]="P"
dataset$tag
dataset$stannertag[dataset$stannertag=="PERSON"]="P"
write.csv(dataset,"dataset.csv",row.names = FALSE)
is.word("Sex")
is.word("Wolf")
is.word("wolf")
tolower("Sex")
dataset$naivetag=ifelse((dataset$postag %in% c("NN","NNP","NNS","NNPS") & !is.word(tolower(dataset$word))),"P","O")
write.csv(dataset,"dataset.csv",row.names = FALSE)
for (i in c(4:9,11:14)){
dataset[,i]=as.factor(dataset[,i])
}
rm(i)
split=34:100
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(nertag~.,data = traindata[,-c(1:3,12)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
table(output,testdata$nertag)
library(randomForest)
split=34:100
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(nertag~.,data = traindata[,-c(1:3,12)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
table(output,testdata$nertag)
split=34:100
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3,12)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
table(output,testdata$nertag)
split=34:100
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3,12,14)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
table(output,testdata$tag)
dataset$tag
dataset$tag=as.character(dataset$tag)
dataset$tag[dataset$tag=="ORGANIZATION"]
dataset$tag[dataset$tag=="ORGANIZATION"]="O"
dataset$tag=as.factor(dataset$tag)
dataset$tag
split=34:100
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3,12,14)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
table(output,testdata$tag)
testdata$pred=output
split=c(1:33,68:100)
split=sort(split)
split=c(1:33,68:100)
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata2=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3,12,14)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata2)
table(output,testdata$tag)
testdata2$pred=output
split=c(1:33,68:100)
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata2=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3,12,14)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata2)
table(output,testdata2$tag)
testdata2$pred=output
split=c(1:33,68:100)
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata2=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3,12,14)],ntree=500,mtry=6)
output=predict(model_RF,newdata = testdata2)
table(output,testdata2$tag)
testdata2$pred=output
split=1:67
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata3=subset(dataset,!dataset$s_id %in% split)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3,12,14)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata3)
table(output,testdata3$tag)
testdata3$pred=output
finaltest=rbind(testdata,testdata2,testdata3)
finaltest
names(finaltest)
justforfun = finaltest[,c(1,2,3,14,12,15,11)]
names(justforfun)
names(justforfun)[1:3]
names(justforfun)=c(names(justforfun)[1:4],"stanfordtag","modeltag","groundtruth")
names(justforfun)
write.csv(justforfun,"finaloutput.csv",row.names = FALSE)
table(justforfun$naivetag,justforfun$groundtruth)
table(justforfun$stanfordtag,justforfun$groundtruth)
justforfun$stanfordtag=as.character(justforfun$stanfordtag)
justforfun$stanfordtag[justforfun$stanfordtag=="ORGANIZATION"]
justforfun$stanfordtag[justforfun$stanfordtag=="ORGANIZATION"]="O"
justforfun$stanfordtag=as.factor(justforfun$stanfordtag)
write.csv(justforfun,"finaloutput.csv",row.names = FALSE)
table(justforfun$naivetag,justforfun$groundtruth)
table(justforfun$groundtruth,justforfun$naivetag)
table(justforfun$groundtruth,justforfun$naivetag)
table(justforfun$groundtruth,justforfun$stanfordtag)
table(justforfun$groundtruth,justforfun$modeltag)
save.image("C:/Users/asiddhan/Desktop/Starnames/datareported.RData")
is.word("michelle")
abc=read.csv("a.csv",header = FALSE)
is.word  <- function(x) x %in% abc
dataset$naivetag=ifelse((dataset$postag %in% c("NN","NNP","NNS","NNPS") & !is.word(tolower(dataset$word))),"P","O")
dataset[5:15,4:5]
finaltest[5:15,4:5]
View(dataset)
View(finaltest)
finaltest$naivetag=dataset$naivetag
split=1:67
justforfun$naivetag=dataset$naivetag
table(justforfun$groundtruth,justforfun$naivetag)
table(justforfun$groundtruth,justforfun$stanfordtag)
table(justforfun$groundtruth,justforfun$modeltag)
