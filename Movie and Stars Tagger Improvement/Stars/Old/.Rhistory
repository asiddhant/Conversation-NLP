install.packages("rjson")
load("C:/Users/asiddhan/Desktop/model_RF.RData")
dataset=cbind(dataset,word2vec)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
library(randomForest)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=8)
output=predict(model_RF,newdata = testdata)
b=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=16)
output=predict(model_RF,newdata = testdata)
c=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=32)
output=predict(model_RF,newdata = testdata)
d=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=64)
output=predict(model_RF,newdata = testdata)
e=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=4)
output=predict(model_RF,newdata = testdata)
f=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=8)
output=predict(model_RF,newdata = testdata)
g=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=16)
output=predict(model_RF,newdata = testdata)
h=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=32)
output=predict(model_RF,newdata = testdata)
i=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=64)
output=predict(model_RF,newdata = testdata)
j=table(testdata$tag,output)
a
b
c
d
e
f
g
h
i
j
model_RF$importance
yb=model_RF$importance
names(yb)
row.names(yb)
yb=data.frame(vars=row.names(yb),vals=yb)
yb''
yb
yb=yb[order(-yb$MeanDecreaseGini)]
yb=yb[order(-yb$MeanDecreaseGini),]
yb
yb$vars[yb$MeanDecreaseGini>1]
impvars=as.character(yb$vars[yb$MeanDecreaseGini>1])
impvars
dataset[,impvars]
impvars=c(impvars,"tag")
impvars
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=6)
output=predict(model_RF,newdata = testdata)
b=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=8)
output=predict(model_RF,newdata = testdata)
c=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=12)
output=predict(model_RF,newdata = testdata)
d=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=500,mtry=16)
output=predict(model_RF,newdata = testdata)
e=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=4)
output=predict(model_RF,newdata = testdata)
f=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=6)
output=predict(model_RF,newdata = testdata)
g=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=8)
output=predict(model_RF,newdata = testdata)
h=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=12)
output=predict(model_RF,newdata = testdata)
i=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,impvars],ntree=250,mtry=16)
output=predict(model_RF,newdata = testdata)
j=table(testdata$tag,output)
a
b
c
d
e
ef
f
g
h
i
j
rm(list=ls())
load("C:/Users/asiddhan/Desktop/model_RF.RData")
odel_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=6)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
a=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=6)
output=predict(model_RF,newdata = testdata)
b=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=8)
output=predict(model_RF,newdata = testdata)
c=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=500,mtry=2)
output=predict(model_RF,newdata = testdata)
d=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=4)
output=predict(model_RF,newdata = testdata)
f=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=6)
output=predict(model_RF,newdata = testdata)
g=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=8)
output=predict(model_RF,newdata = testdata)
h=table(testdata$tag,output)
model_RF=randomForest(tag~.,data = traindata[,-c(1:3)],ntree=250,mtry=2)
output=predict(model_RF,newdata = testdata)
i=table(testdata$tag,output)
a
b
c
d
e
f
g
h
i
j
save.image("C:/Users/asiddhan/Desktop/multi_model_RF.RData")
setwd("C:/Users/asiddhan/Desktop/Preprocessed Dataset")
setwd("C:/Users/asiddhan/Desktop/Version 2 Data")
users=read.csv("users.csv",stringsAsFactors = FALSE)
str(users)
users$Name[0]
users$Name[1]
users$Name[2]
install.packages("stringi")
library(stringi)
stri_trans_general(users$Name[2])
stri_trans_general(users$Name[2],"latin-ascii")
gsub("[^a-zA-Z0-9]","",users$Name[2])
cleaner=function(x){
gsub("[^a-zA-Z0-9]","",x)
}
users$Name=sapply(users$Name,cleaner)
str(users)
cleaner=function(x){
gsub("[^a-zA-Z0-9_]","",x)
}
users=read.csv("users.csv",stringsAsFactors = FALSE)
users$Name=sapply(users$Name,cleaner)
str(users)
users=read.csv("users.csv",stringsAsFactors = FALSE)
cleaner=function(x){
gsub("[^a-zA-Z0-9 ]","",x)
}
users$Name=sapply(users$Name,cleaner)
str(users)
users$Age=as.numeric(sapply(users$Age,cleaner))
str(users)
users$Gender=as.factor(sapply(users$Gender,cleaner))
str(users)
install.packages("plyr")
install.packages("dplyr")
library(plyr)
library(dplyr)
users$pref=NA
i=1
users[i,12:17]
max(users[i,12:17])
which.max(users[i,12:17])
names(which.max(users[i,12:17]))
names(x)
names(users)
genrenames=c("animation children fantasy","crime thriller mystery","action adventure sci.fi","horror thriller mystery","romance comedy drama","war western musical")
names(genrenames)
names(genrenames)=names(users[12:17])
names(genrenames)
genrenames
genrenames["ACF"]
users$pref=NA
for (i in 1:nrow(users)){
temp=names(which.max(users[i,12:17]))
users$pref[i]=genrenames[temp]
}
users
names(users)
usersuse=users[,c(1,5,4,18)]
usersuse
usersuse$Gender=ifelse(usersuse$Gender=="M",1,0)
usersuse
write.csv(usersuse,"users.csv",row.names = FALSE)
setwd("C:/Users/asiddhan/Desktop/DryRun")
ratings=read.csv("ratings.csv",stringsAsFactors = FALSE)
table(ratings$userId)
users=table(ratings$userId)
useravgratings=tapply(ratings$rating,ratings$userId,mean)
useravgratings
users=as.data.frame.table(users)
useravgratings
useravgratings[1]
users$Var1[1]
users$Var1=as.character(users$Var1)
names(users)=c("u_id","numratings")
head(users)
users=cbind(users,useravgratings)
head(users)
ranusers=sample(users$u_id,3)
ranratings=subset(ratings,ratings$userId %in% ranusers)
setwd("C:/Users/asiddhan/Desktop/Starnames")
poswords=read.csv("poswords.csv",header = FALSE,stringsAsFactors = FALSE)
negwords=read.csv("negwords.csv",header = FALSE,stringsAsFactors = FALSE)
words=c(poswords$V1,negwords$V1)
dataset=read.csv("nerdataset.csv",stringsAsFactors = FALSE)
word2vec=dataset[,c(8:307)]
names(word2vec)
dataset=dataset[,-c(8:307)]
dataset$flflag=0
first=which(dataset$w_id==0)
last=first-1
last=c(last[-1],nrow(dataset))
dataset$flflag[c(first,last)]=1
head(dataset,n=30)
postaga1=c("NA",dataset$postag[-length(dataset$postag)])
dataset$postaga1=postaga1
dataset$postaga1[dataset$w_id==0]="NA"
postagb1=c(dataset$postag[-1],"NA")
dataset$postagb1=postagb1
dataset$postagb1[dataset$w_id!=0 & dataset$flflag==1]="NA"
postaga2=rep(NA,nrow(dataset))
postagb2=rep(NA,nrow(dataset))
for(i in 1:nrow(dataset)){
if(i<=2){
postaga2[i]="NA"
}
if(i>2){
postaga2[i]=ifelse(dataset$s_id[i]==dataset$s_id[i-2],dataset$postag[i-2],"NA")
}
}
for(i in 1:nrow(dataset)){
if(i>(nrow(dataset)-2)){
postagb2[i]="NA"
}
if(i<=(nrow(dataset)-2)){
postagb2[i]=ifelse(dataset$s_id[i]==dataset$s_id[i+2],dataset$postag[i+2],"NA")
}
}
dataset$postaga2=postaga2
dataset$postagb2=postagb2
head(dataset.n=20)
head(dataset,n=20)
dataset=subset(dataset,select=c(s_id,w_id,word,postagb2,postagb1,postag,postaga1,postaga2,flflag,count,nertag,stannertag))
head(dataset,n=5)
head(dataset,n=20)
library(wordnet)
setDict("C:/Program Files (x86)/WordNet/2.1/dict")
Sys.setenv(WNHOME = "C:/Program Files (x86)/WordNet/2.1")
setDict("C:/Program Files (x86)/WordNet/2.1/dict")
Sys.setenv(WNHOME = "C:/Program Files (x86)/WordNet/2.1")
library(wordnet)
intwords=rep(NA,nrow(dataset))
for (i in 1:nrow(word2vec)){
numbag=min(dataset$w_id[i],5)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i-j])))
if(any(bag %in% synonyms("watch","VERB")))
intwords[i]=1
}
intwords[is.na(intwords)]=0
dataset$intwords=intwords
library(SnowballC)
intwords=rep(NA,nrow(dataset))
for (i in 1:nrow(word2vec)){
numbag=min(dataset$w_id[i],5)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i-j])))
if(any(bag %in% synonyms("watch","VERB")))
intwords[i]=1
}
intwords[is.na(intwords)]=0
dataset$intwords=intwords
dataset$intwords=NULL
a=c(1,0,1)
b=c(0,0,1)
a|b
as.numeric(a|b)
intwords=rep(NA,nrow(dataset))
for (i in 1:nrow(word2vec)){
numbag=min(dataset$w_id[i],5)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i-j])))
if(any(bag %in% words))
intwords[i]=1
}
intwords[is.na(intwords)]=0
## More Features - Sentiment Word
sentwords=rep(NA,nrow(dataset))
temp=which(dataset$w_id==0)
temp=c(temp[-1],nrow(dataset)+1)
temp=temp-1
wordnum=dataset$w_id[temp]+1
for (i in 1:nrow(dataset)){
sid=dataset$s_id[i]
numbag=min(5,wordnum[sid]-dataset$w_id[i]-1)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i+j])))
if(any(bag %in% words))
sentwords[i]=1
print (i)
}
sentwords[is.na(sentwords)]=0
finwords=as.integer(intwords|sentwords)
finwords
intwords=rep(NA,nrow(dataset))
for (i in 1:nrow(word2vec)){
numbag=min(dataset$w_id[i],4)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i-j])))
if(any(bag %in% words))
intwords[i]=1
}
intwords[is.na(intwords)]=0
## More Features - Sentiment Word
sentwords=rep(NA,nrow(dataset))
temp=which(dataset$w_id==0)
temp=c(temp[-1],nrow(dataset)+1)
temp=temp-1
wordnum=dataset$w_id[temp]+1
for (i in 1:nrow(dataset)){
sid=dataset$s_id[i]
numbag=min(4,wordnum[sid]-dataset$w_id[i]-1)
bag=c()
for (j in 1:numbag)
bag=c(bag,wordStem(tolower(dataset$word[i+j])))
if(any(bag %in% words))
sentwords[i]=1
print (i)
}
sentwords[is.na(sentwords)]=0
finwords=as.integer(intwords|sentwords)
finwords
dataset$finwords=finwords
write.csv(cbind(dataset,word2vec),"dataset.csv",row.names = FALSE)
notapp=which(word2vec$X0==-999)
a=c(1,2,3,4,5)
a
word2vec[a,]
mean(word2vec[a,])
apply(word2vec[a,],1,mean)
apply(word2vec[a,],2,mean)
notapp=which(word2vec$X0==-999)
for (i in notapp){
tag=dataset$postag[i]
subd=which(dataset$postag==tag)
word2vec[i]=apply(word2vec[subd,],2,mean)
}
notapp=which(word2vec$X0==-999)
for (i in notapp){
tag=dataset$postag[i]
subd=which(dataset$postag==tag)
word2vec[i,]=apply(word2vec[subd,],2,mean)
}
write.csv(cbind(dataset,word2vec),"dataset.csv",row.names = FALSE)
library(gdata)
keep(dataset,word2vec,sure=TRUE)
str(dataset)
for (i in c(4:9,11:13)){
dataset[,i]=as.factor(dataset[,i])
}
rm(i)
str(dataset)
split=sample(1:max(dataset$s_id),30)
split=sort(split)
traindata=subset(dataset,dataset$s_id %in% split)
testdata=subset(dataset,!dataset$s_id %in% split)
str(dataset)
model_RF=randomForest(nertag~.,data = traindata[,-c(1:3,12)],ntree=500,mtry=4)
library(randomForest)
model_RF=randomForest(nertag~.,data = traindata[,-c(1:3,12)],ntree=500,mtry=4)
output=predict(model_RF,newdata = testdata)
table(output,testdata$nertag)
justforfun=cbind(testdata[,c(1:3,11,12)],output)
justforfun
write.csv(justforfun,"output.csv",row.names = FALSE)
save.image("C:/Users/asiddhan/Desktop/Starnames/results.RData")
